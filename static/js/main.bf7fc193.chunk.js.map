{"version":3,"sources":["Components/ThemeContext/ThemeContext.js","Components/Footer/index.js","Components/Header/SwitchMode.jsx","Components/Header/Header.jsx","Components/Countries/Country.jsx","Components/Store/types.js","Components/Store/Actions/countriesActions.js","Components/Loading/index.js","Components/Countries/Countries.jsx","Components/CountryDetail/CountryInfo.jsx","Components/CountryDetail/Image.js","Components/CountryDetail/CountryDetail.js","Components/SearchAndFilter/Options/Option.jsx","Components/SearchAndFilter/Options/Options.jsx","Components/SearchAndFilter/Filter.jsx","Components/SearchAndFilter/Search.jsx","Components/SearchAndFilter/SearchAndFilter.js","App.js","Components/Reducers/countriesReducer.js","Components/Reducers/index.js","Components/Store/index.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","theme","setTheme","valueTheme","toggleTheme","Provider","value","Footer","props","themeContext","useContext","FooterContainer","className","styled","div","SwitchMode","isDark","setIsDark","refInput","useRef","refCircle","refToggle","useEffect","current","checked","changeBackgroundButton","style","background","document","addEventListener","removeEventListener","onClick","ref","type","React","memo","Header","HeaderPane","to","process","Country","country","name","CountryCard","src","flag","alt","CountryInfo","population","region","capital","GET_COUNTRIES","GET_COUNTRIES_BY_NAME","GET_COUNTRIES_BY_REGION","GET_COUNTRY_BY_NAME","SET_LOADING","RESET_COUNTRY","countriesApi","Loading","Countries","dispatch","useDispatch","slug","useParams","countries","useSelector","state","loading","regionName","a","Types","payload","axios","get","then","res","data","map","Intl","NumberFormat","format","catch","err","console","log","maxHeight","overflow","marginRight","paddingRight","CountriesContainer","length","index","getLanguages","result","languages","forEach","language","getCountryNameByCode","code","countriesBorder","setCountriesBorder","refCountry","dataTable","title","nativeName","altSpellings","subregion","topLevelDomain","currencies","borders","countryName","showCountry","scrollHeight","width","item","Image","ImagePane","CountryDetail","history","useHistory","Wrapper","BackButton","goBack","CountryContainer","Option","filterContext","FilterContext","OptionItem","getValueOption","push","valueOption","fontWeight","icon","RegionsList","GiWorld","FaGlobeAfrica","FaGlobeAmericas","FaGlobeAsia","FaGlobeEurope","GiEarthAsiaOceania","Options","isShowOptions","refOptions","ShowOptions","transform","OptionsPane","Filter","setIsShowOptions","refSelect","setValueOption","handleOptions","e","contains","target","valueFilterContext","useCallback","FitlerPane","SelectPane","Select","Search","valueInput","setValueInput","SearchPane","SearchElement","placeholder","onChange","height","SearchAndFilter","SearchAndFilterPane","HOME_PATH","App","AppContainer","ContentContainer","exact","path","CountriesReducerInitialState","CountriesReducer","action","rootReducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"wTAEaA,EAAeC,0BAErB,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,SAC7B,EAA4BC,mBAAS,cAArC,mBAAQC,EAAR,KAAeC,EAAf,KAKMC,EAAa,CAACF,QAAOG,YAHP,WAClBF,EAAmB,cAAVD,EAAwB,aAAe,eAGlD,OACE,cAACL,EAAaS,SAAd,CAAuBC,MAAOH,EAA9B,SACGJ,ICCQQ,MAVf,SAAgBC,GACd,IAAMC,EAAeC,qBAAWd,GAChC,OACE,eAACe,EAAD,CAAiBC,UAAWH,EAAaR,MAAzC,UACE,6DACA,4DAOAU,EAAkBE,IAAOC,IAAV,gO,8BCVrB,SAASC,EAAWP,GAClB,IAAMC,EAAeC,qBAAWd,GAChC,EAA8BI,oBAAS,GAAvC,mBAAQgB,EAAR,KAAgBC,EAAhB,KACMC,EAAWC,iBAAO,MAClBC,EAAYD,iBAAO,MACnBE,EAAYF,iBAAO,MAEzBG,qBAAU,WACRJ,EAASK,QAAQC,QAAUR,IAC3B,CAACA,IAyBH,OAjBAM,qBAAU,WACR,IAAMG,EAAyB,WACzBT,GACFK,EAAUE,QAAQG,MAAMC,WAAa,OACrCP,EAAUG,QAAQG,MAAMC,WAAa,SAErCN,EAAUE,QAAQG,MAAMC,WAAa,gCACrCP,EAAUG,QAAQG,MAAMC,WAAa,SAKzC,OAFAF,IACAG,SAASC,iBAAiB,SAAUJ,GAC7B,WACLG,SAASE,oBAAoB,SAAUL,MAEzC,CAACT,IAGD,mCACE,sBAAKJ,UAAU,eAAemB,QAzBb,WACnBb,EAASK,QAAQC,SAAWN,EAASK,QAAQC,QAC7CP,EAAUC,EAASK,QAAQC,SAC3Bf,EAAaL,eAsB0C4B,IAAKX,EAA1D,UACE,uBAAOY,KAAK,WAAWrB,UAAU,QAAQoB,IAAKd,IAC9C,qBAAKN,UAAU,OAAf,SACII,EAAU,cAAC,IAAD,IAAgB,cAAC,IAAD,MAE9B,qBAAKJ,UAAU,SAASoB,IAAKZ,SAMtBc,I,EAAAA,MAAMC,KAAKpB,GCjCXqB,I,IAAAA,EAZf,SAAgB5B,GACd,IAAMC,EAAeC,qBAAWd,GAChC,OACE,eAACyC,EAAD,CAAYzB,UAAWH,EAAaR,MAApC,UACE,cAAC,IAAD,CAAMqC,GANMC,IAMZ,SACE,yDAEF,cAAC,EAAD,QAOAF,EAAaxB,IAAOC,IAAV,mT,uBChBhB,SAAS0B,EAAQhC,GACf,IAAMC,EAAeC,qBAAWd,GACxB6C,EAAYjC,EAAZiC,QAER,OACE,cAAC,IAAD,CAAMH,GAAE,mBAAcG,EAAQC,MAA9B,SACE,eAACC,EAAD,CAAa/B,UAAS,UAAKH,EAAaR,MAAlB,gBAAtB,UACE,qBAAKW,UAAU,QAAf,SACE,qBAAKgC,IAAKH,EAAUA,EAAQI,KAAO,uDAAwDC,IAAKL,GAAWA,EAAQC,SAGrH,eAACK,EAAD,WACE,6BAAKN,EAAUA,EAAQC,KAAO,KAC9B,+CACc,+BAAOD,EAAUA,EAAQO,WAAa,QAEpD,2CACU,+BAAOP,EAAUA,EAAQQ,OAAS,QAE5C,4CACW,+BAAOR,EAAUA,EAAQS,QAAU,gBAQzChB,UAAMC,KAAKK,GAEpBG,EAAc9B,IAAOC,IAAV,whBA2BXiC,EAAclC,IAAOC,IAAV,sS,0CC/DJqC,EAAgB,gBAChBC,EAAwB,wBACxBC,EAA0B,0BAC1BC,EAAsB,sBACtBC,EAAc,cACdC,EAAgB,gBCFvBC,EAAe,+B,MCQNC,I,EAAAA,EARf,SAAiBlD,GACf,OACE,qBAAKI,UAAU,UAAf,SACE,sBAAKA,UAAU,cAAf,UAA6B,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,8B,OCO5J,SAAS+C,EAAUnD,GACjB,IAAMoD,EAAWC,cACXC,EAAOC,cACPC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMP,UAAUK,aACnDG,EAAUF,aAAY,SAACC,GAAD,OAAWA,EAAMP,UAAUQ,WAQvD,OANA7C,qBAAU,WF4BsB,IAACoB,EAsBEO,EEjD7Ba,EAAKM,WAAYR,GFiDYX,EEjDkBa,EAAKM,WFiDxB,uCAAY,WAAMR,GAAN,SAAAS,EAAA,6DAC9CT,EAAS,CAAC3B,KAAMqC,EAAmBC,SAAS,IAC5CX,EAAS,CAAC3B,KAAMqC,IAF8B,SAGxCE,IAAMC,IAAN,UAAahB,EAAb,mBAAoCR,IACvCyB,MAAK,SAAAC,GACJ,IAAMX,EAAYW,EAAIC,KAAKC,KAAI,SAAApC,GAAO,MAAK,CACzCC,KAAMD,EAAQC,KACdQ,QAAST,EAAQS,QACjBF,YAAY,IAAI8B,KAAKC,cAAeC,OAAOvC,EAAQO,YACnDC,OAAQR,EAAQQ,OAChBJ,KAAMJ,EAAQI,SAEhBe,EAAS,CAAE3B,KAAMqC,EAAmBC,SAAS,IAC7CX,EAAS,CAAE3B,KAAMqC,EAA6BC,QAASP,OAExDiB,OAAM,SAACC,GACNC,QAAQC,IAAI,iCAAkCF,MAhBJ,2CAAZ,wDEhDvBpB,EAAKpB,KAAMkB,GF0BWlB,EE1BiBoB,EAAKpB,KF0BvB,uCAAU,WAAMkB,GAAN,SAAAS,EAAA,6DAC1CT,EAAS,CAAC3B,KAAMqC,EAAmBC,SAAS,IAC5CX,EAAS,CAAC3B,KAAMqC,IAF0B,SAGpCE,IAAMC,IAAN,UAAahB,EAAb,iBAAkCf,IACrCgC,MAAK,SAAAC,GACJ,IAAMX,EAAYW,EAAIC,KAAKC,KAAI,SAAApC,GAAO,MAAK,CACzCC,KAAMD,EAAQC,KACdQ,QAAST,EAAQS,QACjBF,YAAY,IAAI8B,KAAKC,cAAeC,OAAOvC,EAAQO,YACnDC,OAAQR,EAAQQ,OAChBJ,KAAMJ,EAAQI,SAEhBe,EAAS,CAAE3B,KAAMqC,EAAmBC,SAAS,IAC7CX,EAAS,CAAE3B,KAAMqC,EAA6BC,QAASP,OAExDiB,OAAM,SAACC,GACNC,QAAQC,IAAI,iCAAkCF,GAC9CtB,EAAS,CAAE3B,KAAMqC,EAAmBC,SAAS,IAC7CX,EAAS,CAAE3B,KAAMqC,EAA6BC,QAAS,QAlBjB,2CAAV,wDEzBzBX,EFjBmB,uCAAM,WAAOA,GAAP,SAAAS,EAAA,sEAE9BT,EAAS,CAAE3B,KAAMqC,EAAmBC,SAAS,IAC7CX,EAAS,CAAC3B,KAAMqC,IAHc,SAIxBE,IACHC,IAAIhB,EAAe,QACnBiB,MAAK,SAACC,GACL,IAAMX,EAAYW,EAAIC,KAAKC,KAAI,SAACpC,GAAD,MAAc,CAC3CC,KAAMD,EAAQC,KACdQ,QAAST,EAAQS,QACjBF,YAAY,IAAI8B,KAAKC,cAAeC,OAAOvC,EAAQO,YACnDC,OAAQR,EAAQQ,OAChBJ,KAAMJ,EAAQI,SAEhBe,EAAS,CAAE3B,KAAMqC,EAAqBC,QAASP,IAC/CJ,EAAS,CAAE3B,KAAMqC,EAAmBC,SAAS,OAE9CU,OAAM,SAACC,GACNC,QAAQC,IAAI,MAAOF,MAlBO,uDAqB9BC,QAAQC,IAAI,4BAAZ,MArB8B,yDAAN,yDEkBvB,CAACtB,EAAKM,WAAYN,EAAKpB,OAGxB,mCACGyB,EACC,cAAC,EAAD,IAEA,cAAC,IAAD,CACEzC,MAAO,CACL2D,UAAW,OACXC,SAAU,SACVC,YAAa,OACbC,aAAc,OALlB,SAQE,cAACC,EAAD,UACGzB,EAAU0B,OAAS,EAClB1B,EAAUa,KAAI,SAACpC,EAASkD,GAAV,OACZ,cAAC,EAAD,CAAqBlD,QAASA,GAAhBkD,MAEhB,6DASCzD,UAAMC,KAAKwB,GAEpB8B,EAAqB5E,IAAOC,IAAV,sVCzClB8E,G,MAAe,SAACnD,GACpB,IAAIoD,EAAS,GAKb,OAJApD,EAAQqD,UAAUC,SAAQ,SAACC,GACV,KAAXH,EAAeA,EAASA,EAAS,IAAMG,EAAStD,KAC/CmD,GAAUG,EAAStD,QAEnBmD,IAGHI,EAAoB,uCAAG,WAAOC,GAAP,eAAA7B,EAAA,sEACNG,IAAMC,IAAN,mDAAsDyB,IADhD,cACrBL,EADqB,yBAEpBA,EAAOjB,MAFa,2CAAH,sDAK1B,SAAS7B,EAAYvC,GACnB,MAA8CR,mBAAS,IAAvD,mBAAOmG,EAAP,KAAwBC,EAAxB,KACM3F,EAAeC,qBAAWd,GAC1B6C,EAAUwB,aAAY,SAACC,GAAD,OAAWA,EAAMP,UAAUlB,WACjD4D,EAAalF,iBAAO,MAEpBmF,EAAY,CAChB,CAAEC,MAAO,cAAejG,MAAOmC,EAAUA,EAAQ+D,WAAa,IAC9D,CACED,MAAO,WACPjG,MAAOmC,GAAWA,EAAQgE,aAAehE,EAAQgE,aAAa,GAAK,IAErE,CACEF,MAAO,aACPjG,MAAOmC,GAAU,IAAIqC,KAAKC,cAAeC,OAAOvC,EAAQO,YAAc,IAExE,CAAEuD,MAAO,SAAUjG,MAAOmC,EAAUA,EAAQQ,OAAS,IACrD,CAAEsD,MAAO,aAAcjG,MAAOmC,EAAUA,EAAQiE,UAAY,IAC5D,CAAEH,MAAO,UAAWjG,MAAOmC,EAAUA,EAAQS,QAAU,IACvD,CAAEqD,MAAO,GAAIjG,MAAO,IACpB,CAAEiG,MAAO,mBAAoBjG,MAAOmC,EAAUA,EAAQkE,eAAiB,IACvE,CACEJ,MAAO,aACPjG,MACEmC,GAAWA,EAAQmE,WAAnB,UACOnE,EAAQmE,WAAW,GAAGV,KAD7B,cACuCzD,EAAQmE,WAAW,GAAGlE,MACzD,IAER,CAAE6D,MAAO,YAAajG,MAAOmC,EAAUmD,EAAanD,GAAW,IAC/D,CAAE8D,MAAO,GAAIjG,MAAO,KAwBtB,OArBAgB,qBAAU,WACJmB,GAAWA,EAAQoE,SAErBZ,EAAqBxD,EAAQoE,SAC1BnC,MAAK,SAAAC,GACJ,IAAMmC,EAAcnC,EAAIE,KAAI,SAAApC,GAAO,OAAIA,EAAQC,QAC/C0D,EAAmBU,MAIzB,IAAMC,EAAc,WACLV,EAAW9E,QAAQG,MAAM2D,UAAlC5C,EAAS,UAAwC4D,EAAW9E,QAAQyF,aAA3D,MAC8B,KAI7C,OAFAD,IACAnF,SAASC,iBAAiB,SAAUkF,GAC7B,WACLnF,SAASE,oBAAoB,SAAUiF,MAExC,CAACtE,IAGF,qBAAK7B,UAAU,cAAcoB,IAAKqE,EAAlC,SAEK5D,GAAa,eAAC,IAAD,CACZf,MAAO,CAAE2D,UAAW,OAAQC,SAAU,SAAU2B,MAAO,QAD3C,UAGZ,oBAAIrG,UAAU,cAAd,SAA6B6B,EAAQC,OACrC,gCACE,kCACG4D,EAAUzB,KAAI,SAACqC,EAAMvB,GAAP,OACb,+BACE,oBAAI/E,UAAU,YAAd,SAA2BsG,EAAKX,QAChC,6BAAoB,KAAfW,EAAKX,OAAgB,MAC1B,oBAAI3F,UAAU,YAAd,SAA2BsG,EAAK5G,UAHzBqF,MAMX,+BACE,oBAAI/E,UAAU,YAAd,8BACA,mCACA,6BACE,qBAAKA,UAAU,aAAf,SACGuF,EAAgBT,OAAS,GACxBS,EAAgBtB,KAAI,SAACpC,GAAD,OAClB,cAAC,IAAD,CAAMH,GAAE,mBAAcG,GAAtB,SACE,qBAAK7B,UAAS,UAAKH,EAAaR,MAAlB,eAAd,SACGwC,KAFiCA,uBAkB/CP,I,GAAAA,OAAMC,KAAKY,GCrH1B,SAASoE,GAAM3G,GACb,IAAMiC,EAAUwB,aAAY,SAAAC,GAAK,OAAIA,EAAMP,UAAUlB,WAErD,OACE,cAAC2E,GAAD,UACE,qBACExE,IAAKH,EAAUA,EAAQI,KAAO,uDAC9BC,IAAKL,EAAUA,EAAQC,KAAO,OAKvBR,I,SAAAA,OAAMC,KAAKgF,IAEpBC,GAAYvG,IAAOC,IAAV,2OCRf,SAASuG,GAAc7G,GACrB,IAAMC,EAAeC,qBAAWd,GAC1BkE,EAAOC,cACPuD,EAAUC,cACV3D,EAAWC,cACXM,EAAUF,aAAY,SAACC,GAAD,OAAWA,EAAMP,UAAUQ,WAOvD,OAJA7C,qBAAU,WLYoB,IAACoB,EKX7BkB,GLW6BlB,EKXHoB,EAAKgD,YLWH,uCAAU,WAAMlD,GAAN,SAAAS,EAAA,sEAEtCT,EAAS,CAAC3B,KAAMqC,EAAmBC,SAAS,IAC5CX,EAAS,CAAC3B,KAAMqC,IAHsB,SAIhCE,IAAMC,IAAN,UAAahB,EAAb,iBAAkCf,IACrCgC,MAAK,SAAAC,GACJf,EAAS,CAAE3B,KAAMqC,EAAmBC,SAAS,IAC7CX,EAAS,CAAE3B,KAAMqC,EAA2BC,QAASI,EAAIC,KAAK,QAE/DK,OAAM,SAACC,GACNC,QAAQC,IAAI,MAAOF,MAVe,uDAatCC,QAAQC,IAAI,iCAAZ,MAbsC,yDAAV,0DKV5B,CAACtB,EAAKgD,cAGN,eAACU,GAAD,WACE,cAACC,GAAD,CAAY7G,UAAWH,EAAaR,MAAO8B,QAASuF,EAAQI,OAA5D,qBACEvD,EAAU,cAAC,EAAD,IACZ,eAACwD,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,UAMOzF,I,GAAAA,OAAMC,KAAKkF,IAIpBG,GAAU3G,IAAOC,IAAV,oDAGP2G,GAAa5G,IAAOC,IAAV,+WAmBV6G,GAAmB9G,IAAOC,IAAV,8M,kBCnCN8G,I,GAAAA,GAlBhB,YAA2B,IAAV3E,EAAS,EAATA,OACT4E,EAAgBnH,qBAAWoH,IAC3BR,EAAUC,cAQhB,OACE,eAACQ,GAAD,CAAYhG,QAPY,WACxB8F,EAAcG,eAAe/E,EAAO3C,OACjB,QAAf2C,EAAO3C,MAAegH,EAAQW,KAAR,UARZ1F,IAQY,kBAAmCU,EAAO3C,QAC/DgH,EAAQW,KATC1F,MAa0Bb,MAAOmG,EAAcK,cAAcjF,EAAO3C,MAAQ,CAACqB,WAAY,gCAAiCwG,WAAY,QAAS,GAA7J,UACE,cAAClF,EAAOmF,KAAR,IACA,8BAAMnF,EAAO3C,YAObyH,GAAalH,IAAOC,IAAV,uSCpBVuH,GAAc,CAClB,CAAED,KAAME,KAAShI,MAAO,OACxB,CAAE8H,KAAMG,KAAejI,MAAO,UAC9B,CAAE8H,KAAMI,KAAiBlI,MAAO,YAChC,CAAE8H,KAAMK,KAAanI,MAAO,QAC5B,CAAE8H,KAAMM,KAAepI,MAAO,UAC9B,CAAE8H,KAAMO,KAAoBrI,MAAO,YAGrC,SAASsI,GAAT,GAAmC,IAAjBC,EAAgB,EAAhBA,cACVpI,EAAeC,qBAAWd,GAC1BkJ,EAAa3H,iBAAO,MAoB1B,OAlBAG,qBAAU,WACR,IAAMyH,EAAc,WACdF,GACFC,EAAWvH,QAAQG,MAAM2D,UAAzB,UAAwCyD,EAAWvH,QAAQyF,aAA3D,MACA8B,EAAWvH,QAAQG,MAAMsH,UAAY,cAGrCF,EAAWvH,QAAQG,MAAM2D,UAAY,IACrCyD,EAAWvH,QAAQG,MAAMsH,UAAY,cAKzC,OAFAD,IACAnH,SAASC,iBAAiB,SAAUkH,GAC7B,WACLnH,SAASE,oBAAoB,SAAUiH,MAEzC,CAACF,IAGD,cAACI,GAAD,CAAarI,UAAS,UAAKH,EAAaR,MAAlB,gBAAuC+B,IAAK8G,EAAlE,SAEIT,GAAYxD,KAAI,SAAC5B,GAAD,OACd,cAAC,GAAD,CAA2BA,OAAQA,GAAtBA,EAAO3C,YAOf4B,I,SAAAA,OAAMC,KAAKyG,IAEpBK,GAAcpI,IAAOC,IAAV,2LCrCJgH,GAAgBjI,0BAE7B,SAASqJ,GAAO1I,GACd,IAAMC,EAAeC,qBAAWd,GAChC,EAA0CI,oBAAS,GAAnD,mBAAO6I,EAAP,KAAsBM,EAAtB,KACMC,EAAYjI,iBAAO,MACzB,EAAsCnB,mBAAS,OAA/C,mBAAOkI,EAAP,KAAoBmB,EAApB,KACMvF,EAAOC,cAEbzC,qBAAU,WACJwC,EAAKM,WACPiF,EAAevF,EAAKM,YAChBiF,EAAe,SACrB,CAACvF,EAAKM,aAER,IAAMkF,EAAgB,SAACC,GAIrBJ,EAAiBC,EAAU7H,QAAQiI,SAASD,EAAEE,UAGhDnI,qBAAU,WACR,GAAIuH,EAEF,OADAjH,SAASC,iBAAiB,QAASyH,GAC5B,WACL1H,SAASE,oBAAoB,QAASwH,MAGzC,CAACT,IAEJ,IAIMa,EAAqB,CAAE1B,eAJN2B,uBAAY,SAACrJ,GAClC+I,EAAe/I,KACd,IAE0C4H,eAE7C,OACE,cAACJ,GAAczH,SAAf,CAAwBC,MAAOoJ,EAA/B,SACE,eAACE,GAAD,WACE,sDACA,eAACC,GAAD,WACE,eAACC,GAAD,CACElJ,UAAWH,EAAaR,MACxB8B,QAASuH,EACTtH,IAAKoH,EAHP,UAKE,6BAAKlB,IACL,cAAC,KAAD,OAEF,cAAC,GAAD,CAASW,cAAeA,YAOnB3G,I,MAAAA,OAAMC,KAAK+G,IAEpBU,GAAa/I,IAAOC,IAAV,oTAeV+I,GAAahJ,IAAOC,IAAV,yFAKVgJ,GAASjJ,IAAOC,IAAV,4L,SCpFZ,SAASiJ,GAAOvJ,GACd,IAAMC,EAAeC,qBAAWd,GAChC,EAAsCI,mBAAS,IAA/C,mBAAQgK,EAAR,KAAoBC,EAApB,KAEMnG,EAAOC,cAOb,OALAzC,qBAAU,WACJwC,EAAKpB,MAAoB,KAAZoB,EAAKpB,KAAWuH,EAAcnG,EAAKpB,MAC/CuH,EAAc,MACnB,CAACnG,EAAKpB,OAGN,eAACwH,GAAD,WACE,iDACA,eAACC,GAAD,WACE,uBACElI,KAAK,OACLmI,YAAY,mCACZC,SAAU,SAAAd,GAAC,OAAIU,EAAcV,EAAEE,OAAOnJ,QACtCA,MAAO0J,IAET,cAAC,IAAD,CACE1H,GAAiB,KAAb0H,EAAA,UAxBIzH,IAwBJ,kBAAuCyH,GAxBnCzH,IAyBRb,MAAO,CAACuF,MAAO,OAAQqD,OAAQ,QAFjC,SAIE,cAAC,KAAD,CAAU1J,UAAS,eAAUH,EAAaR,iBAOrCiC,I,GAAAA,OAAMC,KAAK4H,IAEpBG,GAAarJ,IAAOC,IAAV,iTAeVqJ,GAAgBtJ,IAAOC,IAAV,4rBC5CJyJ,I,MAAAA,GATf,SAAyB/J,GACvB,OACE,eAACgK,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,QAOAA,GAAsB3J,IAAOC,IAAV,mSCLnB2J,I,MAAYlI,KAqCHmI,OAnCf,SAAalK,GACX,IAAMC,EAAeC,qBAAWd,GAEhC,OACE,cAAC+K,GAAD,CAAc/J,UAAWH,EAAaR,MAAtC,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC2K,GAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOC,OAAK,EAACC,KAAML,GAAnB,UACE,cAAC,GAAD,IACA,cAAC,EAAD,OAGF,eAAC,IAAD,CAAOK,KAAI,UAAKL,GAAL,sBAAX,UACE,cAAC,GAAD,IACA,cAAC,EAAD,OAGF,eAAC,IAAD,CAAOK,KAAI,UAAKL,GAAL,gBAAX,UACE,cAAC,GAAD,IACA,cAAC,EAAD,OAGF,cAAC,IAAD,CAAOK,KAAI,UAAKL,GAAL,wBAAX,SACE,cAAC,GAAD,WAIN,cAAC,EAAD,UAQFE,GAAe9J,IAAOC,IAAV,qFAMZ8J,GAAmB/J,IAAOC,IAAV,gI,oCCvDhBiK,GAA+B,CACnC/G,UAAW,GACXvB,QAAS,KACT0B,SAAS,GA4BI6G,GA1BU,WAAmD,IAAlD9G,EAAiD,uDAAzC6G,GAA8BE,EAAW,uCACjEhJ,EAAkBgJ,EAAlBhJ,KAAMsC,EAAY0G,EAAZ1G,QACd,OAAQtC,GACN,KAAKqC,EAGL,KAAKA,EAGL,KAAKA,EACH,OAAO,6BAAIJ,GAAX,IAAkBF,UAAWO,IAE/B,KAAKD,EACH,OAAO,6BAAIJ,GAAX,IAAkBzB,QAAS8B,IAE7B,KAAKD,EACH,OAAO,6BAAIJ,GAAX,IAAkBC,QAASI,IAE7B,KAAKD,EACH,OAAO,6BAAIJ,GAAX,IAAkBzB,QAAS,OAE7B,QACE,OAAOyB,ICrBEgH,GAJKC,2BAAgB,CAClCxH,UAAWqH,KCCPI,GAAa,CAACC,MAKLC,GAJDC,uBACZL,GACAM,+BAAoBC,mBAAe,WAAf,EAAmBL,MCDzCM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAACxL,EAAD,UACE,cAAC,GAAD,UAIN8B,SAASiK,eAAe,W","file":"static/js/main.bf7fc193.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const ThemeContext = createContext()\r\n\r\nexport function ThemeProvider({children}) { \r\n  const [ theme, setTheme ] = useState('lightTheme');\r\n    \r\n  const toggleTheme = () => {\r\n    setTheme(theme === 'darkTheme' ? 'lightTheme' : 'darkTheme');\r\n  }\r\n  const valueTheme = {theme, toggleTheme}\r\n  return (\r\n    <ThemeContext.Provider value={valueTheme}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ThemeContext } from '../ThemeContext/ThemeContext';\r\n\r\nfunction Footer(props) {\r\n  const themeContext = useContext(ThemeContext);\r\n  return (\r\n    <FooterContainer className={themeContext.theme}>\r\n      <h4>Copyright &copy; Nghia Nguyen</h4>\r\n      <p>khanhnghia.cv@gmail.com</p>     \r\n    </FooterContainer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n\r\nconst FooterContainer = styled.div`    \r\n  width: 100%;\r\n  height: 8vh;\r\n  display: flex;\r\n  flex-direction: column;  \r\n  align-items: center; \r\n  justify-content: center; \r\n  position: fixed;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { ThemeContext } from '../ThemeContext/ThemeContext';\r\nimport { RiMoonFill } from 'react-icons/ri';\r\nimport { BsFillSunFill } from 'react-icons/bs';\r\nimport './switch.css';\r\n\r\nfunction SwitchMode(props) {\r\n  const themeContext = useContext(ThemeContext);\r\n  const [ isDark, setIsDark ] = useState(false);\r\n  const refInput = useRef(null);\r\n  const refCircle = useRef(null);\r\n  const refToggle = useRef(null);  \r\n\r\n  useEffect(() => {\r\n    refInput.current.checked = isDark;\r\n  },[isDark])\r\n  \r\n  const handleToggle = () => {\r\n    refInput.current.checked = !refInput.current.checked;\r\n    setIsDark(refInput.current.checked);\r\n    themeContext.toggleTheme();    \r\n  }  \r\n\r\n  useEffect(() => {\r\n    const changeBackgroundButton = () => {\r\n      if (isDark) {\r\n        refToggle.current.style.background = '#fff';\r\n        refCircle.current.style.background = '#222';        \r\n      }else {\r\n        refToggle.current.style.background = 'var(--ToggleButtonBackground)';\r\n        refCircle.current.style.background = '#fff';\r\n      }\r\n    }\r\n    changeBackgroundButton();\r\n    document.addEventListener('resize', changeBackgroundButton);\r\n    return () => {\r\n      document.removeEventListener('resize', changeBackgroundButton);\r\n    }\r\n  },[isDark])\r\n  \r\n  return (\r\n    <>      \r\n      <div className=\"ToggleButton\" onClick={handleToggle} ref={refToggle}>\r\n        <input type=\"checkbox\" className=\"Input\" ref={refInput}/>\r\n        <div className=\"Icon\">\r\n          {(isDark) ? <RiMoonFill/> : <BsFillSunFill/>}\r\n        </div>\r\n        <div className=\"Circle\" ref={refCircle}></div>\r\n      </div>     \r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(SwitchMode);","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { ThemeContext } from '../ThemeContext/ThemeContext';\r\nimport SwitchMode from './SwitchMode';\r\n\r\nconst HOME_PATH = process.env.REACT_APP_PUBLIC_URL;\r\n\r\nfunction Header(props) {\r\n  const themeContext = useContext(ThemeContext);    \r\n  return (\r\n    <HeaderPane className={themeContext.theme}>\r\n      <Link to={HOME_PATH}>      \r\n        <span>Where in the world?</span>\r\n      </Link>\r\n      <SwitchMode/>\r\n    </HeaderPane>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n\r\nconst HeaderPane = styled.div`  \r\n  height: 8vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 40px;\r\n  z-index: 10;\r\n  \r\n  span {\r\n    font-weight: bold;\r\n    font-size: 24px;\r\n    text-shadow: var(--TextShadow);\r\n    cursor: pointer;\r\n    user-select: none;\r\n  }\r\n`\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { ThemeContext } from \"../ThemeContext/ThemeContext\";\r\nimport \"./country.css\";\r\n\r\nfunction Country(props) {\r\n  const themeContext = useContext(ThemeContext);\r\n  const { country } = props;\r\n  \r\n  return (\r\n    <Link to={`/country/${country.name}`}>\r\n      <CountryCard className={`${themeContext.theme} countryCard`} >\r\n        <div className=\"image\">\r\n          <img src={country ? country.flag : \"https://via.placeholder.com/300x200?text=Image+Error\"} alt={country && country.name} />\r\n        </div>\r\n\r\n        <CountryInfo>\r\n          <h3>{country ? country.name : ''}</h3>\r\n          <div>\r\n            Population: <span>{country ? country.population : ''}</span>\r\n          </div>\r\n          <div>\r\n            Region: <span>{country ? country.region : ''}</span>\r\n          </div>\r\n          <div>\r\n            Capital: <span>{country ? country.capital : ''}</span>\r\n          </div>\r\n        </CountryInfo>\r\n      </CountryCard>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default React.memo(Country);\r\n\r\nconst CountryCard = styled.div`\r\n  max-width: 420px;\r\n  width: 100%;\r\n  filter: brightness(1);\r\n  overflow: hidden;\r\n  border-radius: 4px;\r\n  margin-bottom: 12px; \r\n  &:hover {\r\n    filter: brightness(0.9);\r\n  }\r\n  &:hover img {\r\n    transform: scale(1.1);\r\n  }\r\n  .image {\r\n    width: 100%;\r\n    height: 160px;    \r\n    display: block;\r\n    overflow: hidden;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;      \r\n      transition: all 0.2s linear;\r\n    }\r\n  }\r\n`;\r\nconst CountryInfo = styled.div`\r\n  padding: 10px 16px;\r\n  h3 {\r\n    margin: 16px 0;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    height: 50px;\r\n  }\r\n  div {\r\n    display: block;\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    margin: 4px 0;\r\n    span {\r\n      font-weight: 400;\r\n    }\r\n  }\r\n`;\r\n","export const GET_COUNTRIES = 'GET_COUNTRIES';\r\nexport const GET_COUNTRIES_BY_NAME = 'GET_COUNTRIES_BY_NAME';\r\nexport const GET_COUNTRIES_BY_REGION = 'GET_COUNTRIES_BY_REGION';\r\nexport const GET_COUNTRY_BY_NAME = 'GET_COUNTRY_BY_NAME';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const RESET_COUNTRY = 'RESET_COUNTRY';","import axios from \"axios\";\r\nimport * as Types from \"../types\";\r\n\r\nconst countriesApi = \"https://restcountries.com/v2\";\r\n\r\nexport const getCountries = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: Types.SET_LOADING, payload: true });\r\n    dispatch({type: Types.RESET_COUNTRY});\r\n    await axios\r\n      .get(countriesApi + '/all')\r\n      .then((res) => {\r\n        const countries = res.data.map((country) => ({\r\n          name: country.name,\r\n          capital: country.capital,\r\n          population: new Intl.NumberFormat().format(country.population),\r\n          region: country.region,\r\n          flag: country.flag,          \r\n        }));\r\n        dispatch({ type: Types.GET_COUNTRIES, payload: countries });\r\n        dispatch({ type: Types.SET_LOADING, payload: false });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err);\r\n      });\r\n  } catch (error) {\r\n    console.log(\"get countries api error: \", error);\r\n  }\r\n};\r\n\r\nexport const getCountryByName = (name) => async dispatch => {\r\n  try {\r\n    dispatch({type: Types.SET_LOADING, payload: true});\r\n    dispatch({type: Types.RESET_COUNTRY});\r\n    await axios.get(`${countriesApi}/name/${name}`)\r\n      .then(res => {       \r\n        dispatch({ type: Types.SET_LOADING, payload: false});\r\n        dispatch({ type: Types.GET_COUNTRY_BY_NAME, payload: res.data[0] });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err);\r\n      });\r\n  } catch (error) {\r\n    console.log(\"get countries name api error: \", error);\r\n  }\r\n}\r\n\r\nexport const getCountriesByName = (name) => async dispatch => {\r\n  dispatch({type: Types.SET_LOADING, payload: true});\r\n  dispatch({type: Types.RESET_COUNTRY});\r\n  await axios.get(`${countriesApi}/name/${name}`)\r\n    .then(res => {\r\n      const countries = res.data.map(country => ({\r\n        name: country.name,\r\n        capital: country.capital,\r\n        population: new Intl.NumberFormat().format(country.population),\r\n        region: country.region,\r\n        flag: country.flag, \r\n      }))\r\n      dispatch({ type: Types.SET_LOADING, payload: false});\r\n      dispatch({ type: Types.GET_COUNTRIES_BY_NAME, payload: countries });\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"get countries name api error: \", err);\r\n      dispatch({ type: Types.SET_LOADING, payload: false});\r\n      dispatch({ type: Types.GET_COUNTRIES_BY_NAME, payload: [] });\r\n    });\r\n}\r\n\r\nexport const getCountriesByRegion = (region) => async dispatch => {\r\n  dispatch({type: Types.SET_LOADING, payload: true});\r\n  dispatch({type: Types.RESET_COUNTRY});\r\n  await axios.get(`${countriesApi}/region/${region}`)\r\n    .then(res => {\r\n      const countries = res.data.map(country => ({\r\n        name: country.name,\r\n        capital: country.capital,\r\n        population: new Intl.NumberFormat().format(country.population),\r\n        region: country.region,\r\n        flag: country.flag, \r\n      }))\r\n      dispatch({ type: Types.SET_LOADING, payload: false});\r\n      dispatch({ type: Types.GET_COUNTRIES_BY_NAME, payload: countries });\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"get countries name api error: \", err);\r\n    });\r\n}","import React from 'react';\r\nimport './loading.css'\r\n\r\nfunction Loading(props) {\r\n  return (\r\n    <div className=\"loading\">\r\n      <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;","import React, { useEffect } from \"react\";\r\nimport ScrollBar from \"react-perfect-scrollbar\";\r\nimport styled from \"styled-components\";\r\nimport Country from \"./Country\";\r\nimport {\r\n  getCountries,\r\n  getCountriesByRegion,\r\n  getCountriesByName,\r\n} from \"../Store/Actions/countriesActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loading from \"../Loading\";\r\nimport { useParams } from \"react-router\";\r\n\r\nfunction Countries(props) {\r\n  const dispatch = useDispatch();\r\n  const slug = useParams();\r\n  const countries = useSelector((state) => state.Countries.countries);\r\n  const loading = useSelector((state) => state.Countries.loading);\r\n\r\n  useEffect(() => {\r\n    if (slug.regionName) dispatch(getCountriesByRegion(slug.regionName));\r\n    else if (slug.name) dispatch(getCountriesByName(slug.name));\r\n    else dispatch(getCountries());\r\n  }, [slug.regionName, slug.name]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <ScrollBar\r\n          style={{\r\n            maxHeight: \"68vh\",\r\n            overflow: \"hidden\",\r\n            marginRight: \"10px\",\r\n            paddingRight: \"2px\",\r\n          }}\r\n        >\r\n          <CountriesContainer>\r\n            {countries.length > 0 ?\r\n              countries.map((country, index) => (\r\n                <Country key={index} country={country} />\r\n              )):\r\n              <h2>Not found any country</h2>\r\n            }\r\n          </CountriesContainer>\r\n        </ScrollBar>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Countries);\r\n\r\nconst CountriesContainer = styled.div`\r\n  width: 100%;\r\n  columns: 4;\r\n  gap: 12px;\r\n  padding: 4px 1px;\r\n  margin-left: 12px;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    columns: 3;\r\n    gap: 10px;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    columns: 2;\r\n    gap: 8px;\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    columns: 1;\r\n  }\r\n`;\r\n// const CountriesContainer = styled.div`\r\n//   width: 100%;\r\n//   display: grid;\r\n//   grid-template-columns: repeat(4, auto);\r\n//   gap: 12px;\r\n//   padding: 4px 1px;\r\n\r\n//   @media screen and (max-width: 1024px) {\r\n//     grid-template-columns: repeat(3, auto);\r\n//     gap: 10px;\r\n//   }\r\n//   @media screen and (max-width: 768px) {\r\n//     grid-template-columns: repeat(2, auto);\r\n//     gap: 8px;\r\n//   }\r\n//   @media screen and (max-width: 480px) {\r\n//     grid-template-columns: repeat(1, auto);\r\n//   }\r\n// `;\r\n","import axios from \"axios\";\r\nimport React, {  \r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport ScrollBar from \"react-perfect-scrollbar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ThemeContext } from \"../ThemeContext/ThemeContext\";\r\nimport \"./countryInfoStyle.css\";\r\n\r\nconst getLanguages = (country) => {\r\n  let result = \"\";\r\n  country.languages.forEach((language) => {\r\n    if (result !== \"\") result = result + \"-\" + language.name;\r\n    else result += language.name;\r\n  });\r\n  return result;\r\n};\r\n\r\nconst getCountryNameByCode = async (code) => {\r\n  const result = await axios.get(`https://restcountries.com/v2/alpha?codes=${code}`)\r\n  return result.data\r\n}\r\n\r\nfunction CountryInfo(props) {\r\n  const [countriesBorder, setCountriesBorder] = useState([]);\r\n  const themeContext = useContext(ThemeContext);\r\n  const country = useSelector((state) => state.Countries.country);\r\n  const refCountry = useRef(null);  \r\n\r\n  const dataTable = [\r\n    { title: \"Native Name\", value: country ? country.nativeName : \"\" },\r\n    {\r\n      title: \"Official\",\r\n      value: country && country.altSpellings ? country.altSpellings[1] : \"\",\r\n    },\r\n    {\r\n      title: \"Population\",\r\n      value: country ? new Intl.NumberFormat().format(country.population) : \"\",\r\n    },\r\n    { title: \"Region\", value: country ? country.region : \"\" },\r\n    { title: \"Sub Region\", value: country ? country.subregion : \"\" },\r\n    { title: \"Capital\", value: country ? country.capital : \"\" },\r\n    { title: \"\", value: \"\" },\r\n    { title: \"Top Level Domain\", value: country ? country.topLevelDomain : \"\" },\r\n    {\r\n      title: \"Currencies\",\r\n      value:\r\n        country && country.currencies\r\n          ? `${country.currencies[0].code} - ${country.currencies[0].name}`\r\n          : \"\",\r\n    },\r\n    { title: \"Languages\", value: country ? getLanguages(country) : \"\" },\r\n    { title: \"\", value: \"\" },\r\n  ];  \r\n  \r\n  useEffect(() => {\r\n    if (country && country.borders) {\r\n      // console.log(country.borders);            \r\n      getCountryNameByCode(country.borders)\r\n        .then(res => {\r\n          const countryName = res.map(country => country.name)\r\n          setCountriesBorder(countryName);          \r\n        })       \r\n    }\r\n\r\n    const showCountry = () => {\r\n      if (country) refCountry.current.style.maxHeight = `${refCountry.current.scrollHeight}px`;\r\n      else (refCountry.current.style.maxHeight = \"0\");\r\n    };\r\n    showCountry();\r\n    document.addEventListener(\"resize\", showCountry);\r\n    return () => {\r\n      document.removeEventListener(\"resize\", showCountry);\r\n    };\r\n  }, [country]);  \r\n  \r\n  return (\r\n    <div className=\"countryInfo\" ref={refCountry}>      \r\n      {\r\n        (country) && (<ScrollBar\r\n          style={{ maxHeight: \"70vh\", overflow: \"hidden\", width: \"100%\" }}\r\n        >\r\n          <h4 className=\"countryName\">{country.name}</h4>\r\n          <table>\r\n            <tbody>\r\n              {dataTable.map((item, index) => (\r\n                <tr key={index}>\r\n                  <td className=\"titleInfo\">{item.title}</td>\r\n                  <td>{item.title !== \"\" && \":\"}</td>\r\n                  <td className=\"valueInfo\">{item.value}</td>\r\n                </tr>\r\n              ))}\r\n              <tr>\r\n                <td className=\"titleInfo\">Border Countries</td>\r\n                <td>:</td>\r\n                <td>\r\n                  <div className=\"borderList\">\r\n                    {countriesBorder.length > 0 &&\r\n                      countriesBorder.map((country) => (\r\n                        <Link to={`/country/${country}`} key={country}>\r\n                          <div className={`${themeContext.theme} borderItem`}>\r\n                            {country}\r\n                          </div>\r\n                        </Link>\r\n                      ))\r\n                    }\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </ScrollBar>)\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(CountryInfo);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Image(props) {\r\n  const country = useSelector(state => state.Countries.country);      \r\n\r\n  return (\r\n    <ImagePane>\r\n      <img\r\n        src={country ? country.flag : 'https://via.placeholder.com/300x200?text=Image+Error'}\r\n        alt={country ? country.name : ''}\r\n      />\r\n  </ImagePane>\r\n  );\r\n}\r\nexport default React.memo(Image);\r\n\r\nconst ImagePane = styled.div`\r\n  max-width: 400px;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-bottom: 12px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2), 0 6px 20px rgba(0, 0, 0, 0.2);\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport { ThemeContext } from \"../ThemeContext/ThemeContext\";\r\nimport CountryInfo from \"./CountryInfo\";\r\nimport Image from './Image';\r\nimport { getCountryByName } from '../Store/Actions/countriesActions';\r\nimport Loading from \"../Loading\";\r\n\r\nfunction CountryDetail(props) {\r\n  const themeContext = useContext(ThemeContext);\r\n  const slug = useParams();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state) => state.Countries.loading);\r\n  // console.log(slug);\r\n  \r\n  useEffect(() => {\r\n    dispatch(getCountryByName(slug.countryName));    \r\n  },[slug.countryName])    \r\n  \r\n  return (\r\n    <Wrapper>\r\n      <BackButton className={themeContext.theme} onClick={history.goBack}>Go Back</BackButton>\r\n      { loading ? <Loading/> :      \r\n      <CountryContainer>\r\n        <Image />\r\n        <CountryInfo />\r\n      </CountryContainer>}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default React.memo(CountryDetail);\r\n\r\n// overflow: hidden;\r\n// height: 78vh;\r\nconst Wrapper = styled.div`\r\n  padding-top: 20px;\r\n`;\r\nconst BackButton = styled.div`\r\n  display: block;\r\n  width: 80px;\r\n  height: 28px;\r\n  line-height: 28px;\r\n  padding: 2px 4px;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n  font-weight: 500;\r\n  filter: brightness(0.9);\r\n  transition: all 0.3 linear;\r\n  &:hover {\r\n    filter: brightness(1);\r\n    font-weight: bold;\r\n    cursor: default;\r\n    user-select: none;\r\n  }\r\n`;\r\n\r\nconst CountryContainer = styled.div`\r\n  display: flex;  \r\n  flex-direction: row;  \r\n  margin-top: 30px;  \r\n  @media only screen and (max-width: 800px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\n","import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport styled from 'styled-components';\r\nimport { FilterContext } from '../Filter';\r\n\r\nconst HOME_PATH = process.env.REACT_APP_PUBLIC_URL;\r\n\r\nfunction Option({region}) {    \r\n  const filterContext = useContext(FilterContext);  \r\n  const history = useHistory();  \r\n  \r\n  const handleValueOption = () => {\r\n    filterContext.getValueOption(region.value);    \r\n    if (region.value!=='All') history.push(`${HOME_PATH}region/${region.value}`)\r\n    else history.push(HOME_PATH)    \r\n  }    \r\n  \r\n  return (    \r\n    <OptionItem onClick={handleValueOption} style={filterContext.valueOption===region.value ? {background: 'var(--SelectOptionBackground)', fontWeight: 'bold'}: {}}>\r\n      <region.icon/>\r\n      <div>{region.value}</div>\r\n    </OptionItem>    \r\n  );\r\n}\r\n\r\nexport default (Option);\r\n\r\nconst OptionItem = styled.div`\r\n  display: flex;\r\n  align-items: center;  \r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  cursor: pointer;  \r\n  padding: 4px 8px;  \r\n\r\n  &:hover {\r\n    background: var(--SelectOptionBackground);\r\n    font-weight: bold;\r\n  }\r\n\r\n  div {\r\n    margin-left: 4px;\r\n  }\r\n  \r\n`","import React, { useContext, useEffect, useRef } from 'react';\r\nimport { GiEarthAsiaOceania, GiWorld } from 'react-icons/gi';\r\nimport { FaGlobeAfrica, FaGlobeAmericas, FaGlobeAsia, FaGlobeEurope } from 'react-icons/fa';\r\nimport styled from 'styled-components';\r\nimport Option from './Option';\r\nimport { ThemeContext } from '../../ThemeContext/ThemeContext';\r\n\r\nconst RegionsList = [\r\n  { icon: GiWorld, value: 'All'},\r\n  { icon: FaGlobeAfrica, value: 'Africa' },\r\n  { icon: FaGlobeAmericas, value: 'Americas' },\r\n  { icon: FaGlobeAsia, value: 'Asia' },\r\n  { icon: FaGlobeEurope, value: 'Europe' },\r\n  { icon: GiEarthAsiaOceania, value: 'Oceania' },\r\n];\r\n\r\nfunction Options({isShowOptions}) {\r\n  const themeContext = useContext(ThemeContext);  \r\n  const refOptions = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const ShowOptions = () => {\r\n      if (isShowOptions) {\r\n        refOptions.current.style.maxHeight = `${refOptions.current.scrollHeight}px`\r\n        refOptions.current.style.transform = 'scaleY(1)';       \r\n\r\n      }else {\r\n        refOptions.current.style.maxHeight = '0'\r\n        refOptions.current.style.transform = 'scaleY(0)'\r\n      }\r\n    }    \r\n    ShowOptions();\r\n    document.addEventListener('resize', ShowOptions);\r\n    return () => {\r\n      document.removeEventListener('resize', ShowOptions);\r\n    }\r\n  },[isShowOptions]); \r\n  \r\n  return (\r\n    <OptionsPane className={`${themeContext.theme} optionsPane`} ref={refOptions}>\r\n      {\r\n        RegionsList.map((region) => (\r\n          <Option key={region.value} region={region} />          \r\n        ))\r\n      }\r\n    </OptionsPane>\r\n  );\r\n}\r\n\r\nexport default React.memo(Options);\r\n\r\nconst OptionsPane = styled.div`  \r\n  transform-origin: top;\r\n  width: 100%;\r\n  margin-top: 2px;\r\n  border-radius: 4px;\r\n  position: absolute;  \r\n  overflow: hidden;  \r\n  z-index: 10;  \r\n  \r\n`","import React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  createContext,\r\n} from \"react\";\r\nimport { FaChevronDown } from \"react-icons/fa\";\r\nimport { useParams } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport { ThemeContext } from \"../ThemeContext/ThemeContext\";\r\nimport Options from \"./Options/Options\";\r\n\r\nexport const FilterContext = createContext();\r\n\r\nfunction Filter(props) {\r\n  const themeContext = useContext(ThemeContext);\r\n  const [isShowOptions, setIsShowOptions] = useState(false);\r\n  const refSelect = useRef(null);\r\n  const [valueOption, setValueOption] = useState(\"All\");  \r\n  const slug = useParams();  \r\n\r\n  useEffect(() => {\r\n    if (slug.regionName) {\r\n      setValueOption(slug.regionName)\r\n    }else setValueOption('All')\r\n  },[slug.regionName])\r\n\r\n  const handleOptions = (e) => {\r\n    //(refSelect.current.contains(e.target))\r\n    // == true if click in range refSelect\r\n    // == false if click out range refSelect\r\n    setIsShowOptions(refSelect.current.contains(e.target));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isShowOptions) {\r\n      document.addEventListener(\"click\", handleOptions);\r\n      return () => {\r\n        document.removeEventListener(\"click\", handleOptions);\r\n      };\r\n    }\r\n  }, [isShowOptions]);\r\n\r\n  const getValueOption = useCallback((value) => {\r\n    setValueOption(value);\r\n  }, []);\r\n\r\n  const valueFilterContext = { getValueOption, valueOption };\r\n\r\n  return (\r\n    <FilterContext.Provider value={valueFilterContext}>\r\n      <FitlerPane>\r\n        <span>Filter by regions:</span>\r\n        <SelectPane>\r\n          <Select\r\n            className={themeContext.theme}\r\n            onClick={handleOptions}\r\n            ref={refSelect}\r\n          >\r\n            <h3>{valueOption}</h3>\r\n            <FaChevronDown />\r\n          </Select>\r\n          <Options isShowOptions={isShowOptions} />\r\n        </SelectPane>\r\n      </FitlerPane>\r\n    </FilterContext.Provider>\r\n  );\r\n}\r\n\r\nexport default React.memo(Filter);\r\n\r\nconst FitlerPane = styled.div`\r\n  max-width: 160px;\r\n  width: 100%;\r\n  margin-top: 20px;\r\n  margin-right: 12px;\r\n  @media screen and (max-width: 600px) {\r\n    margin-left: 0px;    \r\n    max-width: 100%;    \r\n  }\r\n  span {\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-shadow: var(--TextShadow);\r\n  }\r\n`;\r\nconst SelectPane = styled.div`\r\n  width: 100%;\r\n  margin-top: 8px;\r\n  position: relative;\r\n`;\r\nconst Select = styled.div`\r\n  padding: 0 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-radius: 4px;\r\n  height: 34px;\r\n  user-select: none;\r\n`;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MdSearch } from \"react-icons/md\";\r\nimport { ThemeContext } from \"../ThemeContext/ThemeContext\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HOME_PATH = process.env.REACT_APP_PUBLIC_URL;\r\n\r\nfunction Search(props) {\r\n  const themeContext = useContext(ThemeContext);\r\n  const [ valueInput, setValueInput ] = useState('');\r\n  \r\n  const slug = useParams();  \r\n\r\n  useEffect(() => {\r\n    if (slug.name && slug.name!=='') setValueInput(slug.name);\r\n    else setValueInput('')\r\n  },[slug.name]);    \r\n\r\n  return (\r\n    <SearchPane>\r\n      <h3>Search Country:</h3>\r\n      <SearchElement>\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Input the and enter to search...\"\r\n          onChange={e => setValueInput(e.target.value)}\r\n          value={valueInput}         \r\n        />\r\n        <Link \r\n          to={valueInput!==''? `${HOME_PATH}search/${valueInput}`: HOME_PATH} \r\n          style={{width: '40px', height: '100%'}}           \r\n        >\r\n          <MdSearch className={`icon ${themeContext.theme}`} />\r\n        </Link>\r\n      </SearchElement>\r\n    </SearchPane>\r\n  );\r\n}\r\n\r\nexport default React.memo(Search);\r\n\r\nconst SearchPane = styled.div`\r\n  max-width: 320px;\r\n  width: 100%;\r\n  margin-top: 20px;\r\n  margin-left: 12px;\r\n  @media screen and (max-width: 600px) {\r\n    margin-left: 0px;    \r\n    max-width: 100%;    \r\n  }\r\n  h3 {\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-shadow: var(--TextShadow);\r\n  }\r\n`;\r\nconst SearchElement = styled.div`\r\n  margin-top: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  height: 34px;\r\n  background: #fff;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  .icon {\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 2px;\r\n    text-align: center;\r\n    background: #aaa; !important;\r\n    box-shadow: none; !important;    \r\n    opacity: 75%;\r\n    transition: opacity 0.2s linear;\r\n    &:hover { opacity: 1};\r\n  }\r\n  input {\r\n    border: 0;\r\n    outline: none;\r\n    width: 100%;\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n    margin: 0 8px;    \r\n  }\r\n`;\r\n\r\n//     \r\n//     \r\n//     \r\n//     \r\n//     \r\n//     ;\r\n//     \r\n//     \r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Filter from './Filter';\r\nimport Search from './Search';\r\n\r\nfunction SearchAndFilter(props) {\r\n  return (\r\n    <SearchAndFilterPane>\r\n      <Search />\r\n      <Filter />\r\n    </SearchAndFilterPane>\r\n  );\r\n}\r\n\r\nexport default SearchAndFilter;\r\n\r\nconst SearchAndFilterPane = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    flex-direction: column;\r\n    align-items: flex-start;   \r\n    margin-left: 12px;\r\n    margin-right: 12px;\r\n  }\r\n`","import styled from \"styled-components\";\r\nimport Footer from \"./Components/Footer\";\r\nimport React, { useContext } from \"react\";\r\nimport Header from \"./Components/Header/Header\";\r\nimport Countries from \"./Components/Countries/Countries\";\r\nimport CountryDetail from \"./Components/CountryDetail/CountryDetail\";\r\nimport SearchAndFilter from \"./Components/SearchAndFilter/SearchAndFilter\";\r\nimport { ThemeContext } from \"./Components/ThemeContext/ThemeContext\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nconst HOME_PATH = process.env.REACT_APP_PUBLIC_URL;\r\n\r\nfunction App(props) {\r\n  const themeContext = useContext(ThemeContext);\r\n\r\n  return (\r\n    <AppContainer className={themeContext.theme}>\r\n      <Router>\r\n        <Header />\r\n        <ContentContainer>\r\n          <Switch>\r\n            <Route exact path={HOME_PATH}>\r\n              <SearchAndFilter />\r\n              <Countries />\r\n            </Route>\r\n\r\n            <Route path={`${HOME_PATH}region/:regionName`}>\r\n              <SearchAndFilter />\r\n              <Countries />\r\n            </Route>\r\n\r\n            <Route path={`${HOME_PATH}search/:name`}>\r\n              <SearchAndFilter />\r\n              <Countries />\r\n            </Route>\r\n\r\n            <Route path={`${HOME_PATH}country/:countryName`}>\r\n              <CountryDetail />\r\n            </Route>\r\n          </Switch>\r\n        </ContentContainer>\r\n        <Footer />\r\n      </Router>\r\n    </AppContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst AppContainer = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  max-width: 1280px;\r\n  display: block;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  padding: 0 12px;  \r\n`;\r\n","import * as Types from '../Store/types';\r\nconst CountriesReducerInitialState = {  \r\n  countries: [],\r\n  country: null,\r\n  loading: true,  \r\n}\r\nconst CountriesReducer = (state = CountriesReducerInitialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case Types.GET_COUNTRIES:\r\n      return {...state, countries: payload}\r\n\r\n    case Types.GET_COUNTRIES_BY_NAME:\r\n      return {...state, countries: payload}\r\n\r\n    case Types.GET_COUNTRIES_BY_REGION:\r\n      return {...state, countries: payload}\r\n    \r\n    case Types.GET_COUNTRY_BY_NAME:         \r\n      return {...state, country: payload}\r\n    \r\n    case Types.SET_LOADING:\r\n      return {...state, loading: payload}      \r\n   \r\n    case Types.RESET_COUNTRY:\r\n      return {...state, country: null}\r\n      \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default CountriesReducer;","import { combineReducers } from 'redux';\r\nimport CountriesReducer from './countriesReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  Countries: CountriesReducer,\r\n})\r\n\r\nexport default rootReducer;","import { applyMiddleware, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from '../Reducers';\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport store from \"./Components/Store\";\r\nimport { ThemeProvider } from \"./Components/ThemeContext/ThemeContext\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider>\r\n        <App />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}